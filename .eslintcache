[{"/Users/christianpickett/Documents/stockholm/src/App.js":"1","/Users/christianpickett/Documents/stockholm/src/context/UserContext.js":"2","/Users/christianpickett/Documents/stockholm/src/components/SignIn.js":"3","/Users/christianpickett/Documents/stockholm/src/graphql/mutations.js":"4","/Users/christianpickett/Documents/stockholm/src/components/HomeTab.js":"5","/Users/christianpickett/Documents/stockholm/src/components/WelcomeConfirmModal.js":"6","/Users/christianpickett/Documents/stockholm/src/components/WelcomeModal.js":"7","/Users/christianpickett/Documents/stockholm/src/aws-exports.js":"8","/Users/christianpickett/Documents/stockholm/src/components/Register.js":"9","/Users/christianpickett/Documents/stockholm/src/components/ScanTab.js":"10","/Users/christianpickett/Documents/stockholm/src/components/AccountTab.js":"11","/Users/christianpickett/Documents/stockholm/src/components/Home.js":"12","/Users/christianpickett/Documents/stockholm/src/reportWebVitals.js":"13"},{"size":3527,"mtime":1610218841714,"results":"14","hashOfConfig":"15"},{"size":78,"mtime":1609649983853,"results":"16","hashOfConfig":"15"},{"size":6339,"mtime":1610218285601,"results":"17","hashOfConfig":"15"},{"size":1765,"mtime":1609656061656,"results":"18","hashOfConfig":"15"},{"size":1354,"mtime":1610217410037,"results":"19","hashOfConfig":"15"},{"size":1762,"mtime":1609726607118,"results":"20","hashOfConfig":"15"},{"size":3069,"mtime":1609791020611,"results":"21","hashOfConfig":"15"},{"size":692,"mtime":1609656063802,"results":"22","hashOfConfig":"15"},{"size":2417,"mtime":1610218274901,"results":"23","hashOfConfig":"15"},{"size":1747,"mtime":1610227681204,"results":"24","hashOfConfig":"15"},{"size":4541,"mtime":1610215885724,"results":"25","hashOfConfig":"15"},{"size":3226,"mtime":1609698882746,"results":"26","hashOfConfig":"15"},{"size":362,"mtime":1609365763170,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"116hmur",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/christianpickett/Documents/stockholm/src/App.js",["60"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport Home from \"./components/Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Auth , API, graphqlOperation } from 'aws-amplify';\nimport { listUserKeys, getUser, listUsers } from './graphql/queries';\nimport Register from './components/Register';\nimport SignIn from './components/SignIn';\nimport { ActivityIndicator, Toast } from 'antd-mobile';\nimport { UserContext } from './context/UserContext';\nimport { KContext } from './context/KContext';\nimport jwt from 'jsonwebtoken';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState();\n  const [k, setK] = useState();\n\n  useEffect(() => {\n    Auth.currentAuthenticatedUser().then(async(res) => {\n      const sub = res.attributes.sub;\n      await API   \n        .graphql(graphqlOperation(listUserKeys, { input: { filter: { userID : { eq : sub } } } } ))\n        .then(async(res) => {\n            if (res.data.listUserKeys.items.length === 0) {\n              Toast.fail(\"No user found [1]\", 2);\n              Auth.signOut();\n              window.location = \"/\";\n            } else if (res.data.listUserKeys.items.length > 1) {\n              Toast.fail(\"Can't find user : multiple [1]\", 2);\n              Auth.signOut();\n              window.location = \"/\";\n            } else {\n              const k = res.data.listUserKeys.items[0];\n              await API\n              .graphql(graphqlOperation(listUsers, { input: { filter: { owner : { eq : sub } } } } ))\n                .then(res => {\n                  if (res.data.listUsers.items.length === 0) {\n                    Toast.fail(\"No user found [2]\", 2);\n                  } else if (res.data.listUsers.items.length > 1) {\n                    Toast.fail(\"Can't find user : multiple [2]\", 2);\n                  } else {\n                    const d = res.data.listUsers.items[0];\n                    try {\n                      const u = jwt.verify(d.data, k.id);\n                      // console.log(u);\n                      setUser(u);\n                      setK({  ukID : k.id, uID: d.id });\n                      Toast.success(\"Signed in.\", 1);\n                    } catch(err) {\n                      console.log(err);\n                      Toast.fail(\"Error loading user.\")\n                    }\n                  }\n                })\n                .catch(err => {\n                  console.log(err);\n                  Toast.fail(\"Error loading user.\")\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n      setIsAuthenticated(true);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setIsAuthenticated(false);\n      setLoading(false);\n    })\n    \n  }, []);\n  return (\n    <Router>\n      <div className=\"App\">\n        { loading ?  \n          <ActivityIndicator size=\"large\" /> \n        : \n          <>\n            { isAuthenticated ? \n            <UserContext.Provider value={user}>\n              <KContext.Provider value={k}>\n              < Home />\n              </KContext.Provider>\n            </UserContext.Provider>\n             : \n              <Switch>\n                <Route path=\"/signin\" component={SignIn} />\n                <Route path=\"/\" component={Register} />\n              </Switch>\n            }\n          </>\n        }\n        \n         \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["61","62"],"/Users/christianpickett/Documents/stockholm/src/context/UserContext.js",[],"/Users/christianpickett/Documents/stockholm/src/components/SignIn.js",[],"/Users/christianpickett/Documents/stockholm/src/graphql/mutations.js",[],["63","64"],"/Users/christianpickett/Documents/stockholm/src/components/HomeTab.js",[],"/Users/christianpickett/Documents/stockholm/src/components/WelcomeConfirmModal.js",[],"/Users/christianpickett/Documents/stockholm/src/components/WelcomeModal.js",["65","66"],"import React, { useContext, useEffect } from 'react';\nimport { Modal, List, Button, InputItem , Picker, Flex} from 'antd-mobile';\nimport { UserContext } from '../context/UserContext';\nimport { Link } from 'react-router-dom';\n\nconst WelcomeModal = ({ modalVisible, setModalVisible, fullSend, welcomeRequest, setWelcomeResponse  }) => {\n\n    const user = useContext(UserContext);\n    // console.log(user);\n    useEffect(() => {\n        if(welcomeRequest && welcomeRequest.request.includes(\"email\")) {\n            setWelcomeResponse(prev => ({...prev, email: user.primaryEmail}))\n        }\n    }, [welcomeRequest])\n    return (\n        user &&\n        <Modal\n            popup\n            visible={modalVisible}\n            onClose={() => setModalVisible(false)}\n            animationType=\"slide-up\"\n            >\n                {welcomeRequest && \n                    <List renderHeader={() => <div>Atlis Connect - {welcomeRequest.appName}</div>} className=\"popup-list\">\n                        {welcomeRequest.request.map((i, index) => (\n                            i === \"email\" ? \n                                <InputItem\n                                    key={index}\n                                    value={user.primaryEmail}\n                                >\n                                    {i.charAt(0).toUpperCase() + i.slice(1)}\n                                </InputItem>\n                            :\n                            <InputItem\n                                key={index}\n                                clear\n                                placeholder={`Click to enter ${i}`}\n                                onChange={el => setWelcomeResponse(prev => ({...prev, [i]: el}))}\n                            >\n                                {i.charAt(0).toUpperCase() + i.slice(1)}\n                            </InputItem>\n                            // <Picker \n                            //     cols={1} title={i.charAt(0).toUpperCase() + i.slice(1)} \n                            //     extra=\"extra\" okText=\"ok\" dismissText=\"dismiss\"\n                            //     // data={user.apps}\n                            //     >\n                            //     <List.Item arrow=\"horizontal\">{i.charAt(0).toUpperCase() + i.slice(1)}</List.Item>\n                            // </Picker>\n                        ))}\n                        <List.Item>\n                            <Flex>\n                                <Flex.Item>\n                                    <Button type=\"primary\" onClick={() => { setModalVisible(false); fullSend(); }}>Yes</Button>\n                                </Flex.Item>\n                                <Flex.Item>\n                                    <Button type=\"warning\" onClick={() => { setModalVisible(false);}}> <Link style={{color:\"white\"}} to=\"/\">No</Link></Button>\n                                </Flex.Item>\n                            </Flex>\n                        </List.Item>\n                    </List>\n                }\n            \n        </Modal>\n    )\n}\n\nexport default WelcomeModal\n","/Users/christianpickett/Documents/stockholm/src/aws-exports.js",[],["67","68"],"/Users/christianpickett/Documents/stockholm/src/components/Register.js",[],"/Users/christianpickett/Documents/stockholm/src/components/ScanTab.js",["69"],"/Users/christianpickett/Documents/stockholm/src/components/AccountTab.js",["70","71","72","73","74","75","76"],"import React, { useContext, useState } from 'react';\nimport { Auth, API, graphqlOperation } from 'aws-amplify';\nimport { Button, Flex, Icon, InputItem, Toast, WhiteSpace, WingBlank } from 'antd-mobile';\nimport { Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { UserContext } from '../context/UserContext';\nimport { KContext } from '../context/KContext';\nimport { createUserKey, createUser, deleteUser, deleteUserKey } from '../graphql/mutations';\nimport jwt from \"jsonwebtoken\";\n\nconst AccountTab = () => {\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n\n    const user = useContext(UserContext);\n    const k = useContext(KContext);\n\n    const edit = async () => {\n        if (user) {\n            Toast.loading(\"Saving.....\", 2);\n            await API\n                .graphql(graphqlOperation(createUserKey, { input : { userID: user.id }}))\n                .then(async (res) => {\n                    const d = jwt.sign({ ...user, firstName, lastName }, res.data.createUserKey.id);\n                    await API\n                        .graphql(graphqlOperation(createUser, { input : { data: d } }))\n                        .then( async(res) => {\n                            await API\n                                .graphql(graphqlOperation(deleteUser, {input : { id : k.uID} }))\n                                .then(async(res) => {\n                                    await API\n                                        .graphql(graphqlOperation(deleteUserKey, {input: {id: k.ukID}} ))\n                                        .then(res => {\n                                            Toast.success(\"Saved.\");\n                                            window.location = \"/account\";\n                                        })\n                                        .catch(err => {\n                                            console.log(err);\n                                        })\n                                })\n                                .catch(err => {\n                                    console.log(err);\n                                })\n                        })\n                        .catch(err => {\n                            console.log(err);\n                            Toast.fail(\"Error editing user account\", 3);\n                        })\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n\n        }\n        \n    }\n\n    const signOut = async() => {\n        await Auth.signOut().then(res => window.location = \"/\" ).catch(err => console.log(err));\n    }\n\n    return (\n        <div style={{ backgroundColor: 'white', height: '100%', textAlign: 'center' }}>\n            <WingBlank>\n                <div style={{ paddingTop: 60 }}>\n                    {/* <h3>Account</h3> */}\n                    { user && \n                    <>\n                        <Avatar size={64}><b style={{fontSize:\"28px\"}}>{user.primaryEmail.charAt(0).toUpperCase()}</b></Avatar>\n                        <WhiteSpace size=\"xl\" />\n                        <h2>{user.primaryEmail}</h2>\n                    \n                    \n                    </>}\n                    \n                    {/* <Flex>\n                        <Flex.Item>\n                            { user && user.firstName ? \n                            <InputItem value={user.firstName} disabled />\n                            : \n                            <InputItem placeholder=\"enter first name...\" onChange={setFirstName}/>\n                            }\n                        </Flex.Item>\n                        <Flex.Item>\n                            { user && user.lastName ? \n                            <InputItem value={user.lastName} disabled/>\n                            : \n                            <InputItem placeholder=\"enter first name...\" onChange={setLastName} />\n                            }\n                        </Flex.Item>\n                    </Flex> */}\n                    \n                    {/* { user && user.primaryEmail && <InputItem value={user.primaryEmail} disabled/> } */}\n\n                    {/* { user && user.firstName ? \"\" : <Button type=\"primary\" onClick={edit}>Edit</Button>} */}\n                    \n                    <WhiteSpace size=\"xl\" />\n                    <WhiteSpace size=\"xl\" />\n                    <Button type=\"primary\" onClick={signOut}>Sign Out</Button>\n                </div>\n            </WingBlank>\n        </div>\n    )\n}\n\nexport default AccountTab\n","/Users/christianpickett/Documents/stockholm/src/components/Home.js",[],"/Users/christianpickett/Documents/stockholm/src/reportWebVitals.js",[],{"ruleId":"77","severity":1,"message":"78","line":6,"column":24,"nodeType":"79","messageId":"80","endLine":6,"endColumn":31},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"77","severity":1,"message":"87","line":2,"column":43,"nodeType":"79","messageId":"80","endLine":2,"endColumn":49},{"ruleId":"88","severity":1,"message":"89","line":14,"column":8,"nodeType":"90","endLine":14,"endColumn":24,"suggestions":"91"},{"ruleId":"81","replacedBy":"92"},{"ruleId":"83","replacedBy":"93"},{"ruleId":"77","severity":1,"message":"94","line":6,"column":12,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"95","line":3,"column":18,"nodeType":"79","messageId":"80","endLine":3,"endColumn":22},{"ruleId":"77","severity":1,"message":"96","line":3,"column":24,"nodeType":"79","messageId":"80","endLine":3,"endColumn":28},{"ruleId":"77","severity":1,"message":"97","line":3,"column":30,"nodeType":"79","messageId":"80","endLine":3,"endColumn":39},{"ruleId":"77","severity":1,"message":"98","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":22},{"ruleId":"77","severity":1,"message":"99","line":12,"column":23,"nodeType":"79","messageId":"80","endLine":12,"endColumn":35},{"ruleId":"77","severity":1,"message":"100","line":13,"column":22,"nodeType":"79","messageId":"80","endLine":13,"endColumn":33},{"ruleId":"77","severity":1,"message":"101","line":18,"column":11,"nodeType":"79","messageId":"80","endLine":18,"endColumn":15},"no-unused-vars","'getUser' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"'Picker' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setWelcomeResponse' and 'user.primaryEmail'. Either include them or remove the dependency array. If 'setWelcomeResponse' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["104"],["102"],["103"],"'result' is assigned a value but never used.","'Flex' is defined but never used.","'Icon' is defined but never used.","'InputItem' is defined but never used.","'UserOutlined' is defined but never used.","'setFirstName' is assigned a value but never used.","'setLastName' is assigned a value but never used.","'edit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [setWelcomeResponse, user.primaryEmail, welcomeRequest]",{"range":"107","text":"108"},[594,610],"[setWelcomeResponse, user.primaryEmail, welcomeRequest]"]